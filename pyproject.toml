[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# Runtime dependencies are tracked in requirements.txt to avoid Vercel treating
# the project root as an editable install during builds.

[tool.setuptools]
# If you later convert this into an installable package, configure packages discovery here.
packages = { find = {} }

# Optional metadata for entry points (left empty; can be filled later)
[tool.setuptools.entry-points]
# e.g. "console_scripts" = ["assetgen=api.main:cli"]

# Formatting / linting defaults to keep repository consistent.
[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "C", "N", "I", "RUF"]

[tool.mypy]
python_version = 3.10
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q"
testpaths = ["tests"]
filterwarnings = [
  "ignore:Type google._upb._message.MessageMapContainer uses PyType_Spec:DeprecationWarning",
  "ignore:Type google._upb._message.ScalarMapContainer uses PyType_Spec:DeprecationWarning",
  "ignore:Failing to pass a value to the 'type_params'.*:DeprecationWarning",
]

[tool.pre-commit]
repos = [
  { repo = "https://github.com/psf/black", rev = "23.9.1", hooks = [{ id = "black" }] },
  { repo = "https://github.com/pycqa/isort", rev = "5.12.0", hooks = [{ id = "isort" }] },
  { repo = "https://github.com/charliermarsh/ruff-pre-commit", rev = "v0.4.5", hooks = [{ id = "ruff" }] }
]

# Notes
# - This pyproject.toml is intentionally conservative to avoid breaking typical
#   deployment environments (including serverless platforms like Vercel).
# - For local development, install dev dependencies into a virtualenv:
#     python -m venv .venv
#     .venv/bin/pip install -e ".[dev]"
# - When deploying to Vercel or other platforms, ensure only runtime
#   dependencies (the [project].dependencies) are installed by the platform.
#
# If you want, I can also generate:
# - requirements.txt and requirements-dev.txt (pinned versions) derived from these dependencies
# - a Makefile with common targets (install, lint, format, test)
# - a README.md with setup & deployment notes
